package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"fmt"
)

// Assets is the resolver for the assets field.
func (r *bucketResolver) Assets(ctx context.Context, obj *Bucket) ([]*Asset, error) {
	panic(fmt.Errorf("not implemented: Assets - assets"))
}

// CreateAsset is the resolver for the createAsset field.
func (r *mutationResolver) CreateAsset(ctx context.Context, input CreateAssetInput) (*Asset, error) {
	panic(fmt.Errorf("not implemented: CreateAsset - createAsset"))
}

// PatchAsset is the resolver for the patchAsset field.
func (r *mutationResolver) PatchAsset(ctx context.Context, id string, patches []*JSONPatch) (*Asset, error) {
	panic(fmt.Errorf("not implemented: PatchAsset - patchAsset"))
}

// DeleteAsset is the resolver for the deleteAsset field.
func (r *mutationResolver) DeleteAsset(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteAsset - deleteAsset"))
}

// AddVideo is the resolver for the addVideo field.
func (r *mutationResolver) AddVideo(ctx context.Context, input AddVideoInput) (*Video, error) {
	panic(fmt.Errorf("not implemented: AddVideo - addVideo"))
}

// DeleteVideo is the resolver for the deleteVideo field.
func (r *mutationResolver) DeleteVideo(ctx context.Context, assetID string, videoID string) (*Asset, error) {
	panic(fmt.Errorf("not implemented: DeleteVideo - deleteVideo"))
}

// CreateBucket is the resolver for the createBucket field.
func (r *mutationResolver) CreateBucket(ctx context.Context, input BucketInput) (*Bucket, error) {
	panic(fmt.Errorf("not implemented: CreateBucket - createBucket"))
}

// UpdateBucket is the resolver for the updateBucket field.
func (r *mutationResolver) UpdateBucket(ctx context.Context, id string, input BucketInput) (*Bucket, error) {
	panic(fmt.Errorf("not implemented: UpdateBucket - updateBucket"))
}

// DeleteBucket is the resolver for the deleteBucket field.
func (r *mutationResolver) DeleteBucket(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteBucket - deleteBucket"))
}

// AddAssetToBucket is the resolver for the addAssetToBucket field.
func (r *mutationResolver) AddAssetToBucket(ctx context.Context, input AddAssetToBucketInput) (bool, error) {
	panic(fmt.Errorf("not implemented: AddAssetToBucket - addAssetToBucket"))
}

// RemoveAssetFromBucket is the resolver for the removeAssetFromBucket field.
func (r *mutationResolver) RemoveAssetFromBucket(ctx context.Context, input RemoveAssetFromBucketInput) (bool, error) {
	panic(fmt.Errorf("not implemented: RemoveAssetFromBucket - removeAssetFromBucket"))
}

// AddImage is the resolver for the addImage field.
func (r *mutationResolver) AddImage(ctx context.Context, input AddImageInput) (*Asset, error) {
	panic(fmt.Errorf("not implemented: AddImage - addImage"))
}

// Assets is the resolver for the assets field.
func (r *queryResolver) Assets(ctx context.Context, limit *int, offset *int) ([]*Asset, error) {
	panic(fmt.Errorf("not implemented: Assets - assets"))
}

// Asset is the resolver for the asset field.
func (r *queryResolver) Asset(ctx context.Context, id *string) (*Asset, error) {
	panic(fmt.Errorf("not implemented: Asset - asset"))
}

// Buckets is the resolver for the buckets field.
func (r *queryResolver) Buckets(ctx context.Context, limit *int, nextKey *string) (*BucketPage, error) {
	panic(fmt.Errorf("not implemented: Buckets - buckets"))
}

// Bucket is the resolver for the bucket field.
func (r *queryResolver) Bucket(ctx context.Context, id *string) (*Bucket, error) {
	panic(fmt.Errorf("not implemented: Bucket - bucket"))
}

// BucketByKey is the resolver for the bucketByKey field.
func (r *queryResolver) BucketByKey(ctx context.Context, key string) (*Bucket, error) {
	panic(fmt.Errorf("not implemented: BucketByKey - bucketByKey"))
}

// BucketsByOwner is the resolver for the bucketsByOwner field.
func (r *queryResolver) BucketsByOwner(ctx context.Context, ownerID string, limit *int, nextKey *string) (*BucketPage, error) {
	panic(fmt.Errorf("not implemented: BucketsByOwner - bucketsByOwner"))
}

// SearchBuckets is the resolver for the searchBuckets field.
func (r *queryResolver) SearchBuckets(ctx context.Context, query string, limit *int, nextKey *string) (*BucketPage, error) {
	panic(fmt.Errorf("not implemented: SearchBuckets - searchBuckets"))
}

// SearchAssets is the resolver for the searchAssets field.
func (r *queryResolver) SearchAssets(ctx context.Context, query string, limit *int, offset *int) ([]*Asset, error) {
	panic(fmt.Errorf("not implemented: SearchAssets - searchAssets"))
}

// Bucket returns BucketResolver implementation.
func (r *Resolver) Bucket() BucketResolver { return &bucketResolver{r} }

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type bucketResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
